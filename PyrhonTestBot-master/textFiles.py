intro = 'Проектная работа для Техникума на первые 12 уроков'

theme1 = '''
На первом уроке было введение в курс. Был показан план обучения.
Ссылка на презентацию:
https://t.me/c/1623960178/6
Ссылка на видеоурок:
https://youtu.be/WPeXh7B9ikc
'''
theme2 = '''
Типы данных (str, int, float, complex)
На этом уроке мы научились пользоваться IDE Pycharm, использоват различные типы данных такие как сторки,
целые числа, дробные числа и комплексные числа. Нам показали как переводить данные
из одного типа данных в другой при помощи конструктора. Мы научились пользоваться переменными и получать
значение переменной от пользователя. Научились использовать условия if elif else.
При помощи этого мы создали первый калькулятор и программу для сравнения чисел

Ссылка на видеоурок:
https://youtu.be/W-ZrjNktsUI
'''

theme3 = '''
\tНа этом уроке мы попробовали сделать калькулятор для ИМТ(BMI), Прошли новый тип данных который называется list
Лист это тип данных массив в котором хранятся другие данные. Они могут быть любым типом данных.
Листы всегда упорядочены и каждый элемент листа имеет свой индекс через который к нему можно обратиться.
Листы могут быть изменены, то есть, после того как вы его создали вы можете как добавить так и удалить любой элемент
Так же листы допускают наличие дубликатов что означает что элементов с одинаковым значеним может быть сколь угодно много\n
Примеры использования листа:
a = ['Mother', 'Father', 1, True, 0.9, 'Mother']
Некоторые действия с листам:
a.append = "orange"  ------> Добавит в список а элемент "orange" в качестве последнего элемента
a.remove = "orange"  ------> Удалит из списка а элемент "orange"
a.clear() -----> очистит список
Ссылка на презентацию:
https://t.me/c/1623960178/16
Ссылка на урок:
https://youtu.be/1E7pm9Tx-PA'''

theme4 = '''
Тип данных Tuples & loops
loop это использование функций For и While
Для чего это нужно
Использование этих функций позволяет нам выполнять определенное действие до того пока выполняется условие')

Например:

a = 1
while a<10:
print(a)    ----> в этом случае мы получил бесконечное количество раз напечатанную переменную а так как все это время будет выполнятся условие a < 10

a = 1
while a<10
print a
a =+ 1    ----> в данном случае мы получим в результате перечисление 1, 2, 3, 4, 5, 6, 7, 8, 9 и на этом функция остановится

a = 10
for i in range(a)
print i     ----> мы получил опять перечисление от 1 до 10

Таким образзом делаем вывод что while выполняет действие до тех пор пока соблюдается условие
А for выполняет действие за каждый элемент заданого обьекта
Tuple или иначе кортедж это еще один тип данных похожий на лист по всем параметрам кроме того что
кортежи нельзя редактировать после того как они были созданы и в отличие от листов синтаксис у кортежей выглядит вот так
a = ("asdf","fads", 1, True, 0.9) (когда как у листов вместо круглых скобок() используются квадратные [])

Действия с кортежами:
кортежи все так же при помощи конструктора list() можно превратить в лист и редактировать
вывод какого либо элемента кортежа при помощи индекса print(a[0])

Ссылка на презентацию:
https://t.me/c/1641089910/792
Ссылка на урок:
https://youtu.be/cQ8RfHo_Lrc'''

theme5 = '''
Функции и типы данных (Dictionaries и Sets)
На этом уроке мы познакомились с функциями, научились задавать функции и вызывать их. Так же мы узнали что такое
параметр и аргумент функции. Познакомились с такими понятиями как произвольные аргументы *args, Аргументы ключевых слов,
Аргументы произвольных ключевых слов ** kwargs, аргумент по умолчанию и возвращаемые значения

Примеры функций
def my_function()   ----> Мы задали фунцию my_function при мощи def
    print ('Мы задали фунцию my_function и теперь при ее вызове данный текст распечатаеся')
my_function()   ----> таким образом мы вызвали функцию и ее действия выполнятся
    
def my_function(name)   ----> тут мы задаем параметр функции name
    print (f'{name} имя которое передается в качестве аргумента функции')
my_function()   ----> это приведет к ошибке так как не был указан ни аргумент ни значение параметра по умолчанию
my_function('Ulugbek')      ----> в данном случае распечатается текст "Ulugbek имя которое передается в качестве аргумента функции"
    
def my_function(name = "Не указано")   ----> тут мы задаем параметру функции name значение по умолчанию которым является "Не указано"
    print (f'{name} имя которое передается в качестве аргумента функции')
my_function()   ----> теперь мы не получил ошибки а респечатается текст "Не указано имя которое передается в качестве аргумента функции"

Ссылка на презентацию:
https://t.me/c/1623960178/24
Ссылка на урок:
https://youtu.be/3Y2aP8KMHWE
'''

theme6 = '''
На этом уроке мы делали презентацию на тему рекурсии, познакомились с такими типами данных как Dictionaries и Sets
Словари или Dictionaries это тип данных в котором хранятся элемент разделенные по парно.
Первые элемент пары называется ключ, а второй элемент значение.
Словари до версии Python 3.7 были не упорядоченные а с версии 3.7 стали упорядоченные но при этом не индексируются
Словари не допускают дублирующихся значений но они могут быть изменены'
Сеты так же тип данных хранящие элементы однако в нем:
Нельзя дублировать сеты
Нет порядка
Условно нельзя изменить(Конкретный элемент нельзя изменить но приэтом можно его удалить и добавить другой

Примеры использования Словарей
    thisdict: {                 ----> Выделяется при помощи {}
        "name": "Ulugbek",      ----> Ключ name, значение Ulugbek
        "year": 2001,
        "Job":"Student",
        "isStudying": True      ----> подерживает разные типы данных
        }

Примеры использования Сетов
    thisset = {"hello", "baby", "shark"}    ---->Литерал у сетов такой же как и у словарей {} однако тут элемемнты не имеют ключей

Ссылка на презентацию:
https://t.me/c/1623960178/25
Ссылка на урок:
https://youtu.be/aJ6Yge61jyU
'''
usefulLinks = '''
1. Канал BIG DATA - https://t.me/+619go0Qab1wxOWMy
2. Книга Грокаем Алгоритмы - https://t.me/c/1641089910/155
3. Hakerrank место где можно испытать знания - https://www.hackerrank.com/
'''
